TEST_BIN_NAME="bin/test/tester"
TEST_BIN_TAGS="--gtest_color=yes"

COLOR_RED="\e[1;31m"
COLOR_MAGENTA="\e[35m"
COLOR_GREEN="\e[1;32m"
COLOR_RESET="\e[0m"

COLOR_ERROR=$COLOR_RED
COLOR_WARN=$COLOR_MAGENTA
COLOR_SUCCESS=$COLOR_GREEN

SRC_DIRS="(include|src)"
SRC_EXTS="(c|h|cc|hh|cpp|cxx|hpp)"
SRC_SEARCH="^$SRC_DIRS\/.*\.$SRC_EXTS\$"

git diff --name-only --cached | egrep $SRC_SEARCH > /dev/null
if [ $? = 1 ] ; then
    exit 0
fi

make testbin > .compiler-msg 2> /dev/null
COMPILE_RESULT=$?

echo "Checking for compilation errors and warnings..."

if [ $COMPILE_RESULT = 0 ] ; then
    echo $COLOR_SUCCESS"Compiled with no errors."$COLOR_RESET
    rm .compiler-msg
else
    echo "$(cat .compiler-msg)"
    
    if grep 'error: ' .compiler-msg > /dev/null ; then
        echo $COLOR_ERROR"Error in compiling; commit stopped."$COLOR_RESET
        echo "To commit anyway, use git commit --no-verify or git commit -n"
        rm .compiler-msg
        exit $COMPILE_RESULT
    elif grep 'warning: ' .compiler-msg > /dev/null ; then
        echo $COLOR_WARN"Warnings in compiling; commit paused."$COLOR_RESET
        rm .compiler-msg
        while : ; do
            printf "Commit anyway? (y/n) "
            read STILL_COMMIT
            if [ "$STILL_COMMIT" = 'N' ] || [ "$STILL_COMMIT" = 'n' ] ; then
                echo "Commit stopped."
                exit $COMPILE_RESULT
            elif [ "$STILL_COMMIT" = 'Y' ] || [ "$STILL_COMMIT" = 'y' ] ; then
                echo "Continue committing."
                break
            fi
        done
    elif grep 'error: ld ' .compiler-msg > /dev/null ; then
        echo $COLOR_ERROR"Error in linking; commit paused."$COLOR_RESET
        echo "To commit anyway, use git commit --no-verify or git commit -n"
        rm .compiler-msg
        exit $COMPILE_RESULT
    else
        echo $COLOR_ERROR"Unknown error; commit paused."$COLOR_RESET
        echo "To commit anyway, use git commit --no-verify or git commit -n"
        rm .compiler-msg
        exit $COMPILE_RESULT
    fi
fi


echo "Checking for errors in tests..."

$TEST_BIN_NAME $TEST_BIN_TAGS > .test-msg
TEST_RESULT=$?
if [ $TEST_RESULT = 0 ] ; then
    echo $COLOR_SUCCESS"Passed all tests."$COLOR_RESET
    rm .test-msg
    exit 0
else
    echo "$(cat .test-msg)"
    rm .test-msg
    echo $COLOR_RED"Some tests failed. Commit stopped."$COLOR_RESET
    echo "To commit anyway, use git commit --no-verify or git commit -n"
    exit $TEST_RESULT
fi